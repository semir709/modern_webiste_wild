@tailwind base;
@tailwind components;
@tailwind utilities;

@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300..800&display=swap");

body {
  margin: 0;
  font-family: "Open Sans", -apple-system, BlinkMacSystemFont, "Segoe UI",
    "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans",
    "Helvetica Neue", sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New",
    monospace;
} */

@layer components {
  .tvNoiseAnimationCustom {
    position: absolute;
    inset: -200%;
    background-color: white;
    background-image: url("/src/assets/svg/noise.svg");
    animation: shift 0.2s linear infinite both;
    pointer-events: none;
    z-index: 0;
  }

  @keyframes shift {
    0% {
      transform: translateX(10%) translateY(10%);
    }
    100% {
      transform: translateX(-10%) translateY(-10%);
    }
  }

  /*Animation for nav*/
  .bottomLineAnimation {
    position: relative;
    overflow: hidden;
  }

  .bottomLineAnimation::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 0.5px;
    background-color: currentColor;
    transform: translateX(0%);
    animation: shiftLineRightEnd 0.3s ease-out forwards;
  }

  .bottomLineAnimation:hover::after {
    animation: shiftLineRightStart 0.3s ease-out forwards;
  }

  .horizontalLine::before {
    position: absolute;
    top: 0;
    left: 0;
    width: 0.1rem;
    height: calc(100% - 3rem);
    background-color: currentcolor;
    content: "";
  }

  .list-counter-class {
    counter-increment: list-counter;
  }

  .numberCounter::after {
    position: absolute;
    bottom: 0;
    left: 0;
    content: counter(list-counter, decimal-leading-zero);
    font-size: 1.2rem;
    line-height: 2rem;
  }

  @keyframes shiftLineRightEnd {
    0% {
      transform: translateX(0%);
    }
    100% {
      transform: translateX(100%);
    }
  }

  @keyframes shiftLineRightStart {
    0% {
      transform: translateX(-100%);
    }
    100% {
      transform: translateX(0%);
    }
  }
}
